AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: SafeSakhi - AI-powered women's safety platform with Audio, Motion, Text analysis, Risk Assessment, and Emergency Response.

Globals:
  Function:
    Timeout: 30
    Runtime: python3.9
    MemorySize: 256
    Tracing: Active

Resources:

  ##########################
  # Lambda Functions
  ##########################

  AudioProcessorFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: SafeSakhi-AudioProcessor
      CodeUri: ../lambdas/audio_processor/
      Handler: handler.lambda_handler
      Events:
        AudioApiTrigger:
          Type: Api
          Properties:
            Path: /audio-input
            Method: POST
      Environment:
        Variables:
          LOG_LEVEL: INFO
          AUDIO_ANALYSIS_TABLE_NAME: !Ref AudioAnalysisTable
          AUDIO_TEMP_BUCKET_NAME: !Ref TempAudioBucket
          RISK_ASSESSMENT_LAMBDA_NAME: !Ref RiskAssessorFunction
          THREAT_SCORE_TRIGGER_THRESHOLD: 0.6
          COMPREHEND_LANGUAGE_CODE: en
          COMPREHEND_SENTIMENT_THRESHOLD: 0.2
          COMPREHEND_VOLUME_THRESHOLD: 0.7
      Policies:
        - AWSLambdaBasicExecutionRole
        - Statement:
            - Sid: S3ReadWriteAccess
              Effect: Allow
              Action:
                - s3:GetObject
                - s3:PutObject
                - s3:DeleteObject
                - s3:ListBucket
              Resource:
                - !GetAtt TempAudioBucket.Arn
                - !Sub "${TempAudioBucket.Arn}/*"
        - Statement:
            - Sid: DynamoDBWriteAudioAnalysis
              Effect: Allow
              Action:
                - dynamodb:PutItem
                - dynamodb:UpdateItem
                - dynamodb:DeleteItem
              Resource: !GetAtt AudioAnalysisTable.Arn
        - Statement:
            - Sid: ComprehendPermissions
              Effect: Allow
              Action:
                - comprehend:DetectSentiment
                - comprehend:DetectDominantLanguage
              Resource: "*"
        - LambdaInvokePolicy:
            FunctionName: !GetAtt RiskAssessorFunction.Arn

  MotionAnalyzerFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: SafeSakhi-MotionAnalyzer
      CodeUri: ../lambdas/motion_analyzer/
      Handler: handler.lambda_handler
      Events:
        MotionApiTrigger:
          Type: Api
          Properties:
            Path: /motion-input
            Method: POST
      Environment:
        Variables:
          LOG_LEVEL: INFO
          MOTION_ANALYSIS_TABLE_NAME: !Ref MotionAnalysisTable
          RISK_ASSESSMENT_LAMBDA_NAME: !Ref RiskAssessorFunction
          THREAT_SCORE_TRIGGER_THRESHOLD: 0.5
          MOTION_ACTIVITY_THRESHOLD: 0.1
          LOCATION_STATIONARY_THRESHOLD_METERS: 50
          STATIONARY_DURATION_SECONDS: 300
      Policies:
        - AWSLambdaBasicExecutionRole
        - Statement:
            - Sid: DynamoDBWriteMotionAnalysis
              Effect: Allow
              Action:
                - dynamodb:PutItem
                - dynamodb:UpdateItem
                - dynamodb:DeleteItem
              Resource: !GetAtt MotionAnalysisTable.Arn
        - LambdaInvokePolicy:
            FunctionName: !GetAtt RiskAssessorFunction.Arn

  TextAnalyzerFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: SafeSakhi-TextAnalyzer
      CodeUri: ../lambdas/text_analyzer/
      Handler: handler.lambda_handler
      Events:
        TextApiTrigger:
          Type: Api
          Properties:
            Path: /text-input
            Method: POST
      Environment:
        Variables:
          LOG_LEVEL: INFO
          TEXT_ANALYSIS_TABLE_NAME: !Ref TextAnalysisTable
          EVIDENCE_TABLE_NAME: !Ref EvidenceTable
          RISK_ASSESSMENT_LAMBDA_NAME: !Ref RiskAssessorFunction
          THREAT_SCORE_TRIGGER_THRESHOLD: 0.6
          EVIDENCE_STORAGE_THRESHOLD: 0.7
          EVIDENCE_RETENTION_DAYS: 90
          COMPREHEND_LANGUAGE_CODE: en
          COERCION_KEYWORDS: "dont tell anyone,keep this secret,between us,dont go,stay with me,you have to,you must,or else,threat,hurt,family,consequences"
          CONTROL_PATTERNS: "where are you,who are you with,come back now,you better,if you dont,i know where you live,watching you"
          KEYWORD_COERCION_WEIGHT: 0.2
          REGEX_CONTROL_WEIGHT: 0.3
          COMPREHEND_ANALYSIS_WEIGHT: 0.4
          COMPREHEND_NEGATIVE_SENTIMENT_FACTOR: 0.5
          COMPREHEND_THREAT_PHRASES: "physical harm,hurt you,find you,follow you,watch you,kill you"
          COMPREHEND_KEYPHRASE_BONUS: 0.3
          COMPREHEND_ENTITY_BONUS: 0.1
          COMPREHEND_PERSONAL_ENTITY_TYPES: "PERSON,LOCATION,DATE,PHONE_NUMBER,EMAIL,ADDRESS,BANK_ACCOUNT_NUMBER,SSN,IP_ADDRESS,MAC_ADDRESS"
          COMPREHEND_ENTITY_SCORE_THRESHOLD: 0.8
          MESSAGE_TYPE_MULTIPLIERS: '{"call": 1.2, "repeated_sms": 1.1, "sms": 1.0, "chat": 1.0}'
      Policies:
        - AWSLambdaBasicExecutionRole
        - Statement:
            - Sid: DynamoDBWriteTextAnalysis
              Effect: Allow
              Action:
                - dynamodb:PutItem
                - dynamodb:UpdateItem
                - dynamodb:DeleteItem
              Resource: !GetAtt TextAnalysisTable.Arn
        - Statement:
            - Sid: DynamoDBWriteEvidence
              Effect: Allow
              Action:
                - dynamodb:PutItem
                - dynamodb:UpdateItem
                - dynamodb:DeleteItem
              Resource: !GetAtt EvidenceTable.Arn
        - Statement:
            - Sid: ComprehendTextPermissions
              Effect: Allow
              Action:
                - comprehend:DetectSentiment
                - comprehend:DetectKeyPhrases
                - comprehend:DetectEntities
                - comprehend:DetectDominantLanguage
              Resource: "*"
        - LambdaInvokePolicy:
            FunctionName: !GetAtt RiskAssessorFunction.Arn

  RiskAssessorFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: SafeSakhi-RiskAssessment
      CodeUri: ../lambdas/risk_assessor/
      Handler: handler.lambda_handler
      Environment:
        Variables:
          LOG_LEVEL: INFO
          RISK_ASSESSMENT_THRESHOLD: 0.8
          USERS_TABLE_NAME: !Ref UsersTable
          AUDIO_ANALYSIS_TABLE_NAME: !Ref AudioAnalysisTable
          MOTION_ANALYSIS_TABLE_NAME: !Ref MotionAnalysisTable
          TEXT_ANALYSIS_TABLE_NAME: !Ref TextAnalysisTable
          RISK_ASSESSMENTS_TABLE_NAME: !Ref RiskAssessmentsTable
          INCIDENT_HISTORY_TABLE_NAME: !Ref IncidentHistoryTable
          EMERGENCY_RESPONSE_LAMBDA_NAME: !Ref EmergencyResponderFunction
          RECENT_THREATS_TIME_WINDOW_SECONDS: 1800
          WEIGHT_BASE_SCORE: 0.4
          WEIGHT_ESCALATION_SCORE: 0.3
          WEIGHT_CONTEXT_SCORE: 0.2
          WEIGHT_PATTERN_SCORE: 0.1
          THRESHOLD_CRITICAL: 0.9
          THRESHOLD_HIGH: 0.7
          THRESHOLD_MEDIUM: 0.5
          THRESHOLD_LOW: 0.3
          CONTEXT_NIGHT_HOURS_BONUS: 0.2
          CONTEXT_HIGH_RISK_AREA_BONUS: 0.3
          CONTEXT_ISOLATED_LOCATION_BONUS: 0.1
          LOCATION_ACCURACY_THRESHOLD_METERS: 100
          HIGH_RISK_AREA_PROXIMITY_DEGREE: 0.01
          ESCALATION_MULTI_TYPE_BONUS: 0.4
          ESCALATION_HIGH_COUNT_BONUS: 0.3
          ESCALATION_HIGH_SEVERITY_BONUS: 0.3
          ESCALATION_HIGH_SEVERITY_THRESHOLD: 0.6
          ESCALATION_HIGH_COUNT_THRESHOLD: 3
      Policies:
        - AWSLambdaBasicExecutionRole
        - Statement:
            - Sid: DynamoDBReadWriteUsersTable
              Effect: Allow
              Action:
                - dynamodb:GetItem
                - dynamodb:BatchGetItem
                - dynamodb:Query
                - dynamodb:Scan
                - dynamodb:PutItem
                - dynamodb:UpdateItem
                - dynamodb:DeleteItem
              Resource: !GetAtt UsersTable.Arn
        - Statement:
            - Sid: DynamoDBQueryAnalysisTables
              Effect: Allow
              Action:
                - dynamodb:GetItem
                - dynamodb:BatchGetItem
                - dynamodb:Query
                - dynamodb:Scan
              Resource:
                - !GetAtt AudioAnalysisTable.Arn
                - !GetAtt MotionAnalysisTable.Arn
                - !GetAtt TextAnalysisTable.Arn
                - !GetAtt IncidentHistoryTable.Arn
        - Statement:
            - Sid: DynamoDBWriteRiskAssessments
              Effect: Allow
              Action:
                - dynamodb:PutItem
                - dynamodb:UpdateItem
                - dynamodb:DeleteItem
              Resource: !GetAtt RiskAssessmentsTable.Arn
        - LambdaInvokePolicy:
            FunctionName: !GetAtt EmergencyResponderFunction.Arn

  EmergencyResponderFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: SafeSakhi-EmergencyResponse
      CodeUri: ../lambdas/emergency_responder/
      Handler: handler.lambda_handler
      Events:
        EmergencyApiTrigger:
          Type: Api
          Properties:
            Path: /emergency-response
            Method: POST
      Environment:
        Variables:
          LOG_LEVEL: INFO
          SNS_TOPIC_ARN: !Ref EmergencySNSTopic
          EVIDENCE_S3_BUCKET_NAME: !Ref EvidenceBucket
          INCIDENT_HISTORY_TABLE_NAME: !Ref IncidentHistoryTable
          SMS_MESSAGE_TEMPLATE: "URGENT: SafeSakhi detected a high-risk situation for user {user_id} at {timestamp_iso}. Risk Level: {risk_level}. Please check SafeSakhi app."
          EMAIL_SUBJECT_TEMPLATE: "SafeSakhi URGENT Alert for User {user_id} - {risk_level} Risk Detected"
          EMAIL_BODY_TEMPLATE: "Dear Emergency Contact, \n\nSafeSakhi has detected a {risk_level} risk situation for user {user_id} at {timestamp_iso}. \n\nDetails: Final Risk Score: {final_score:.2f}, Trigger Type: {trigger_type}. \n\nPlease take immediate action and check the SafeSakhi application for more information. \n\nSincerely, \nYour SafeSakhi Team"
          RECORD_UPLOAD_S3_PREFIX: "incident-records/"
          RECORD_RETENTION_DAYS: 365
      Policies:
        - AWSLambdaBasicExecutionRole
        - Statement:
            - Sid: DynamoDBWriteIncidentHistory
              Effect: Allow
              Action:
                - dynamodb:PutItem
                - dynamodb:UpdateItem
                - dynamodb:DeleteItem
              Resource: !GetAtt IncidentHistoryTable.Arn
        - SNSPublishMessagePolicy:
            TopicName: !Ref EmergencySNSTopic
        - Statement:
            - Sid: S3WriteEvidence
              Effect: Allow
              Action:
                - s3:PutObject
                - s3:PutObjectAcl
                - s3:ListBucket
              Resource:
                - !GetAtt EvidenceBucket.Arn
                - !Sub "${EvidenceBucket.Arn}/*"
        - Statement:
            - Sid: DynamoDBWriteLocationTracking
              Effect: Allow
              Action:
                - dynamodb:PutItem
              Resource: !GetAtt LocationTrackingTable.Arn


  ##########################
  # DynamoDB Tables
  ##########################

  AudioAnalysisTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: SafeSakhi-AudioAnalysis
      BillingMode: PAY_PER_REQUEST
      AttributeDefinitions:
        - AttributeName: user_id
          AttributeType: S
        - AttributeName: timestamp
          AttributeType: N
      KeySchema:
        - AttributeName: user_id
          KeyType: HASH
        - AttributeName: timestamp
          KeyType: RANGE

  MotionAnalysisTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: SafeSakhi-MotionAnalysis
      BillingMode: PAY_PER_REQUEST
      AttributeDefinitions:
        - AttributeName: user_id
          AttributeType: S
        - AttributeName: created_at_epoch
          AttributeType: N
      KeySchema:
        - AttributeName: user_id
          KeyType: HASH
        - AttributeName: created_at_epoch
          KeyType: RANGE

  TextAnalysisTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: SafeSakhi-TextAnalysis
      BillingMode: PAY_PER_REQUEST
      AttributeDefinitions:
        - AttributeName: user_id
          AttributeType: S
        - AttributeName: timestamp
          AttributeType: N
      KeySchema:
        - AttributeName: user_id
          KeyType: HASH
        - AttributeName: timestamp
          KeyType: RANGE

  RiskAssessmentsTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: SafeSakhi-RiskAssessments
      BillingMode: PAY_PER_REQUEST
      AttributeDefinitions:
        - AttributeName: user_id
          AttributeType: S
        - AttributeName: timestamp
          AttributeType: N
      KeySchema:
        - AttributeName: user_id
          KeyType: HASH
        - AttributeName: timestamp
          KeyType: RANGE

  UsersTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: SafeSakhi-Users
      BillingMode: PAY_PER_REQUEST
      AttributeDefinitions:
        - AttributeName: user_id
          AttributeType: S
      KeySchema:
        - AttributeName: user_id
          KeyType: HASH

  EvidenceTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: SafeSakhi-Evidence
      BillingMode: PAY_PER_REQUEST
      AttributeDefinitions:
        - AttributeName: evidence_id
          AttributeType: S
      KeySchema:
        - AttributeName: evidence_id
          KeyType: HASH
      TimeToLiveSpecification:
        AttributeName: retention_until
        Enabled: true

  IncidentHistoryTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: SafeSakhi-IncidentHistory
      BillingMode: PAY_PER_REQUEST
      AttributeDefinitions:
        - AttributeName: user_id
          AttributeType: S
        - AttributeName: created_at
          AttributeType: N
      KeySchema:
        - AttributeName: user_id
          KeyType: HASH
        - AttributeName: created_at
          KeyType: RANGE

  LocationTrackingTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: SafeSakhi-LocationTracking
      BillingMode: PAY_PER_REQUEST
      AttributeDefinitions:
        - AttributeName: user_id
          AttributeType: S
        - AttributeName: timestamp
          AttributeType: N
      KeySchema:
        - AttributeName: user_id
          KeyType: HASH
        - AttributeName: timestamp
          KeyType: RANGE


  ##########################
  # S3 Buckets
  ##########################

  TempAudioBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub "safesakhi-audio-temp-${AWS::AccountId}"
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true

  EvidenceBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub "safesakhi-evidence-store-${AWS::AccountId}"
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true

  ##########################
  # SNS Topic
  ##########################

  EmergencySNSTopic:
    Type: AWS::SNS::Topic
    Properties:
      TopicName: SafeSakhi-EmergencyAlerts

  ##########################
  # Lambda Log Groups
  ##########################

  AudioProcessorFunctionLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub "/aws/lambda/${AudioProcessorFunction}"
      RetentionInDays: 30

  MotionAnalyzerFunctionLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub "/aws/lambda/${MotionAnalyzerFunction}"
      RetentionInDays: 30

  TextAnalyzerFunctionLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub "/aws/lambda/${TextAnalyzerFunction}"
      RetentionInDays: 30

  RiskAssessorFunctionLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub "/aws/lambda/${RiskAssessorFunction}"
      RetentionInDays: 30

  EmergencyResponderFunctionLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub "/aws/lambda/${EmergencyResponderFunction}"
      RetentionInDays: 30

  ##########################
  # Outputs
  ##########################

Outputs:
  ApiURL:
    Description: "API Gateway endpoint for triggering analysis Lambdas"
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/"
  AudioProcessorApi:
    Description: "API Gateway URL for Audio Processor"
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/audio-input"
  MotionAnalyzerApi:
    Description: "API Gateway URL for Motion Analyzer"
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/motion-input"
  TextAnalyzerApi:
    Description: "API Gateway URL for Text Analyzer"
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/text-input"
  EmergencyResponderApi:
    Description: "API Gateway URL for Emergency Responder"
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/emergency-response"
  AudioAnalysisTable:
    Description: "DynamoDB Table for Audio Analysis Data"
    Value: !Ref AudioAnalysisTable
  MotionAnalysisTable:
    Description: "DynamoDB Table for Motion Analysis Data"
    Value: !Ref MotionAnalysisTable
  TextAnalysisTable:
    Description: "DynamoDB Table for Text Analysis Data"
    Value: !Ref TextAnalysisTable
  RiskAssessmentsTable:
    Description: "DynamoDB Table for Risk Assessments"
    Value: !Ref RiskAssessmentsTable
  UsersTable:
    Description: "DynamoDB Table for Users"
    Value: !Ref UsersTable
  EvidenceTable:
    Description: "DynamoDB Table for Evidence"
    Value: !Ref EvidenceTable
  IncidentHistoryTable:
    Description: "DynamoDB Table for Incident History"
    Value: !Ref IncidentHistoryTable
  EmergencySNSTopic:
    Description: "SNS Topic ARN for Emergency Alerts"
    Value: !Ref EmergencySNSTopic
  TempAudioBucket:
    Description: "S3 Bucket for Temporary Audio Storage"
    Value: !Ref TempAudioBucket
  EvidenceBucket:
    Description: "S3 Bucket for Evidence Storage"
    Value: !Ref EvidenceBucket
  LocationTrackingTable:
    Description: "DynamoDB Table for Location Tracking"
    Value: !Ref LocationTrackingTable

